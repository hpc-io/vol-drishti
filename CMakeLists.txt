cmake_minimum_required(VERSION 3.12)

project(HDF5_VOL_DRISHTI VERSION 0.1.0 LANGUAGES C)

if(NOT HDF5_VOL_DRISHTI_INSTALL_BIN_DIR)
  set(HDF5_VOL_DRISHTI_INSTALL_BIN_DIR ${CMAKE_INSTALL_PREFIX}/bin)
endif()

if(NOT HDF5_VOL_DRISHTI_INSTALL_LIB_DIR)
  set(HDF5_VOL_DRISHTI_INSTALL_LIB_DIR ${CMAKE_INSTALL_PREFIX}/lib)
endif()

if(NOT HDF5_VOL_DRISHTI_INSTALL_INCLUDE_DIR)
  set(HDF5_VOL_DRISHTI_INSTALL_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
endif()

if(NOT HDF5_VOL_DRISHTI_INSTALL_DATA_DIR)
  set(HDF5_VOL_DRISHTI_INSTALL_DATA_DIR ${CMAKE_INSTALL_PREFIX}/share)
endif()

find_package(MPI REQUIRED)

if(DEFINED ENV{HDF5_DIR})
    message(STATUS "Found HDF5_DIR: $ENV{HDF5_DIR}")

    set(HDF5_HOME $ENV{HDF5_DIR})
    set(CMAKE_PREFIX_PATH $ENV{HDF5_DIR})
endif()

if(DEFINED ENV{HDF5_HOME})
    message(STATUS "Found HDF5_HOME: $ENV{HDF5_HOME}")

    set(HDF5_HOME $ENV{HDF5_HOME})
    set(CMAKE_PREFIX_PATH $ENV{HDF5_HOME})
endif()

find_package(HDF5 REQUIRED)

message(STATUS "Using HDF5 version: ${HDF5_VERSION}")

link_directories(${HDF5_HOME}/lib)

include_directories(${MPI_INCLUDE_PATH})
include_directories(${HDF5_INCLUDE_DIRS})

set(HDF5_VOL_DRISHTI_HEADERS
  ${CMAKE_CURRENT_SOURCE_DIR}/H5VLdrishti.h
)

set(HDF5_VOL_DRISHTI_SRCS
  ${CMAKE_CURRENT_SOURCE_DIR}/H5VLdrishti.c
)

add_library(hdf5_vol_drishti
  SHARED
  ${HDF5_VOL_DRISHTI_SRCS}
)

target_include_directories(hdf5_vol_drishti 
  PRIVATE
  ${CMAKE_CURRENT_SOURCE_DIR}
  PUBLIC
  ${HDF5_DIR}/include
)

target_link_libraries(hdf5_vol_drishti
  PRIVATE
  ${MPI_LIBRARIES}
  ${HDF5_LIBRARIES}
)

install(
  FILES
    ${HDF5_VOL_DRISHTI_HEADERS}
  DESTINATION
    ${HDF5_VOL_DRISHTI_INSTALL_INCLUDE_DIR}
  COMPONENT
    headers
)

install(
  TARGETS
    hdf5_vol_drishti
  EXPORT
    ${HDF5_VOL_DRISHTI_EXPORTED_TARGETS}
  LIBRARY DESTINATION ${HDF5_VOL_DRISHTI_INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${HDF5_VOL_DRISHTI_INSTALL_LIB_DIR}
)
